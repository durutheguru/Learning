AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'lambda-crud

  Sample SAM Template for lambda-crud

  '
Parameters:
  Env:
    Type: String
    Default: local
    AllowedValues:
    - local
    - staging
    - prod
  DbName:
    Type: String
    Default: lambda_crud
  JasyptPwd:
    Type: String
    Default: JJ
  DbUrl:
    Type: String
    Default: jdbc:mysql://docker.for.mac.localhost:3306/lambda_crud?createDatabaseIfNotExist=true&serverTimezone=UTC
  DbUser:
    Type: String
    Default: root
  DbPwd:
    Type: String
    Default: ''
Conditions:
  IsLocal:
    Fn::Equals:
    - Ref: Env
    - local
Globals:
  Function:
    Runtime: java11
    CodeUri: .
    MemorySize: 1024
    Timeout: 90
    Environment:
      Variables:
        ENV:
          Ref: Env
        JASYPT_PWD:
          Ref: JasyptPwd
        DB_URL:
          Fn::If:
          - IsLocal
          - Ref: DbUrl
          - Fn::Sub: jdbc:mysql://${DataSource.Endpoint.Address}:3306/lambda_crud?createDatabaseIfNotExist=true&serverTimezone=UTC
        DB_USER:
          Ref: DbUser
        DB_PWD:
          Ref: DbPwd
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowOrigin: '''*'''
  SavePublisherHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.julianduru.learning.lambda.crud.handlers.publisher.SavePublisherHandler::handleRequest
      CodeUri: SavePublisherHandlerFunction
      Events:
        ApiGatewayEvent:
          Type: Api
          Properties:
            Path: /publisher
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
    Metadata:
      SamResourceId: SavePublisherHandlerFunction
  DataSource:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 10
      DBInstanceClass: db.t2.micro
      DBInstanceIdentifier: lambdacrud
      Engine: MySQL
      EngineVersion: '8.0'
      MasterUsername:
        Ref: DbUser
      MasterUserPassword:
        Ref: DbPwd
      DBName:
        Ref: DbName
Outputs:
  ApiURL:
    Value:
      Fn::Sub: https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/prod/
    Description: URL for the API endpoint
  DBEndpoint:
    Value:
      Fn::GetAtt:
      - DataSource
      - Endpoint.Address
    Export:
      Name: DBInstanceEndpoint
    Description: Endpoint URL for the MySQL RDS instance
